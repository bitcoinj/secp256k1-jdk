# Build on minimal Nix image using the devshell from `flake.nix`
nix-devshell:
  image: nixos/nix:latest
  variables:
    NIXPKGS_URL: "github:NixOS/nixpkgs/nixos-unstable"
  before_script:
    # Configure Nix to use a binary cache and enable experimental features
    - nix-env -iA nixpkgs.cachix
    - cachix use nix-community
    - echo "experimental-features = nix-command flakes" >> /etc/nix/nix.conf
  script:
    - nix develop .#minimum -c gradle build run runEcdsa
  cache:
    key: "${CI_COMMIT_REF_SLUG}"
    paths:
      - /nix/store
      - ~/.gradle/

# Build on Trixie using a Nix devshell.
trixie-devshell:
  image: debian:trixie-slim
  before_script:
    - apt-get update
    - apt-get -y install nix-setup-systemd
    - echo "experimental-features = nix-command flakes" >> /etc/nix/nix.conf
  script:
    - nix develop .#minimum -c gradle build run runEcdsa

# Build on Trixie using Debian's OpenJDK 25 and libsecp256k1 with Gradle installed via the Wrapper.
trixie-gradlew:
  image: debian:trixie-slim
  before_script:
    - apt-get update
    - apt-get -y install openjdk-25-jdk-headless libsecp256k1-2 libsecp256k1-dev
  script:
    - ./gradlew -PjavaToolchainVersion=25 build run runEcdsa

# Build on Forky using Debian's OpenJDK 25 and libsecp256k1 with Gradle installed via the Wrapper.
# If we're lucky, Forky might even get a Debian Gradle we can use. If so, we can stop using the Wrapper.
forky-gradlew:
  image: debian:forky-slim
  before_script:
    - apt-get update
    - apt-get -y install openjdk-25-jdk-headless libsecp256k1-2 libsecp256k1-dev
  script:
    - ./gradlew -PjavaToolchainVersion=25 build run runEcdsa
